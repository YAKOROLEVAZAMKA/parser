import numpy as np
import pandas as pd
import requests
from bs4 import BeautifulSoup 
import re
import copy

years = ['2017','2018', '2019']
weeks = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12',
        '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24',
        '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36',
        '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48',
        '49', '50', '51', '52', '53']

year2017 = []
year2018 = []
year2019 = []
k = 2017

for y in years:
    full_regions = []
    for elem1 in weeks:
        try:
            url1 = 'https://www.influenza.spb.ru/system/epidemic_situation/situation_on_a_flu/?year=' + y + '&week=' + elem1
        
            page1 = requests.get(url1)
        
            soup1 = BeautifulSoup(page1.text, 'html.parser')
        
            temp_reg = soup1.findAll('script', attrs=None)
        
            clean_reg = str(temp_reg).split('mdata[1] = new Array();')[1].split('res=mdata[mnum][sel];')[0]
            clean_reg = clean_reg.replace('\r\n', '')
            clean_reg = clean_reg.strip()
        
            split_clean_reg = clean_reg.split(';')
            split_clean_reg = [x for x in split_clean_reg if x]
        
            final_table = []
        
            for elem in split_clean_reg:
                try:
                    clean_region_number = elem.split('[')[2].split(']')[0]
                except:
                    ;
    
                #print(clean_region_number)
    
                try:
                    clean_region_name = elem.split('"')[1].split(':')[0]
                except:
                    ;
    
                try:
                    clean_region_percent = elem.split(': ')[1].split('"')[0]
                except:
                    ;
    
                clean_data = (elem1, clean_region_number, clean_region_name, clean_region_percent)
                final_table.append(clean_data)
            full_regions += final_table
        
        
        except:
            ;
    if k == 2017:
        year2017 = copy.deepcopy(full_regions)
        k += 1
    elif k == 2018:
        year2018 = copy.deepcopy(full_regions)
        k += 1
    elif k == 2019:
        year2019 = copy.deepcopy(full_regions)
        k += 1

df2017 = pd.DataFrame(year2017)
real_columns = ['week', 'region_id', 'CityName', 'percent']
df2017.columns = real_columns
df2017['year'] = 2017

df2018 = pd.DataFrame(year2018)
real_columns = ['week', 'region_id', 'CityName', 'percent']
df2018.columns = real_columns
df2018['year'] = 2018

df2019 = pd.DataFrame(year2019)
real_columns = ['week', 'region_id', 'CityName', 'percent']
df2019.columns = real_columns
df2019['year'] = 2019